𝐁𝐞𝐠𝐢𝐧𝐧𝐞𝐫-𝐋𝐞𝐯𝐞𝐥 𝐐𝐮𝐞𝐬𝐭𝐢𝐨𝐧𝐬
🔸 Reverse a Linked List
🔸 Find the Middle of a Linked List
🔸 Implement a Stack using Arrays/Linked Lists
🔸 Implement a Queue using Arrays/Linked Lists
🔸 Find Factorial Using Recursion
🔸 Implement Binary Search
🔸 Find the Largest/Smallest Element in an Array
🔸 Implement Merge Sort
🔸 Implement Quick Sort
🔸 Check if a String is a Palindrome

𝐈𝐧𝐭𝐞𝐫𝐦𝐞𝐝𝐢𝐚𝐭𝐞-𝐋𝐞𝐯𝐞𝐥 𝐐𝐮𝐞𝐬𝐭𝐢𝐨𝐧𝐬
🔸 Detect a Cycle in a Linked List
🔸 Find the Intersection Point of Two Linked Lists
🔸 Check if a Binary Tree is a Binary Search Tree (BST)
🔸 Print All Leaf Nodes of a Binary Tree
🔸 Reverse a Binary Tree
🔸 Find the Height of a Binary Tree
🔸 Implement Depth-First Search (DFS) on a Graph
🔸 Implement Breadth-First Search (BFS) on a Graph
🔸 Check if a Graph is Connected
🔸 Find the Next Greater Element in an Array

𝐀𝐝𝐯𝐚𝐧𝐜𝐞𝐝-𝐋𝐞𝐯𝐞𝐥 𝐐𝐮𝐞𝐬𝐭𝐢𝐨𝐧𝐬
🔸 Implement Dijkstra’s Algorithm for Shortest Path
🔸 Implement Prim’s Algorithm for Minimum Spanning Tree
🔸 Implement Kruskal’s Algorithm for Minimum Spanning Tree
🔸 Implement a Trie (Prefix Tree)
🔸 Count the Number of Inversions in an Array
🔸 Find the Median of Two Sorted Arrays
🔸 Implement the KMP Algorithm for String Matching
🔸 Implement the Rabin-Karp Algorithm for String Matching
🔸 Solve the Longest Common Subsequence Problem
🔸 Implement a Priority Queue

𝐁𝐨𝐧𝐮𝐬 𝐐𝐮𝐞𝐬𝐭𝐢𝐨𝐧𝐬
🔸 Design and Implement an LRU Cache
🔸 Solve the Longest Palindromic Substring Problem
🔸 Check if a Graph is Bipartite
🔸 Find the Kth Smallest/Largest Element in an Array
🔸 Implement the Josephus Problem
🔸 Find All Subsets of a Set
🔸 Implement Consistent Hashing
🔸 Find the Shortest Path in a Maze
🔸 Design a File System (Trie Use Case)
🔸 Implement Static and Dynamic Hashmaps

Two Sum
Reverse Linked List
Merge Intervals
Validate BST
Longest Substring Without Repeating Characters
Word Break
Maximum Subarray
Serialize and Deserialize Binary Tree
Course Schedule
Trapping Rain Water
longest non-repeating substring in dsav
Select all customers that starts with the letter "a":
Delete vs truncate vs drop



Oops concepts,
multilevel inheritance code writing
code for deep and shallow copy, 
code for function pass by value, reference and pointer, 
what is casting and types and make a program on it. 
What is abstract class, vtable, pure virtual function, 
modes of inheritance,
exception handling, Multithreading, Design Pattern
vector vs list vs map
C++ Object Slicing and Function Pointers
What is a virtual destructor?
Polymorphism and its real world examples virtual and pure virtual functions experience with multithreading and things around it Past projects brief
Can you explain the difference between a microprocessor and a microcontroller?
How do you rate yourself in OOPS(On a scale of 5) 
Difference between Abstract class and Interface 
Write a code to explain an Interface 
Check if a pair with given Sum exists in Array(approach and code) 
Next Greater Element (NGE) for every element in given Array(optimal approach and code)
Find repeated and Duplicate element in an array.
Find the common minimum elemnet in 2 sorted arrays. If not found, return -1.
Count the number of rotation in a (left) rotated sorted array 
Find the first non-repeating character from the stream of characters.
What do you mean by quick sort.
How to find the starting point of a loop in a circular linked list
Maximum Subarray Sum Problem Statement
Difference between Microcontroller and Microprocessor
Memory types, explain any one

Reverse a string
Reverse a LinkedList
Print the duplicates in a string with its count
